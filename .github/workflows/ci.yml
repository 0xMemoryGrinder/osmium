name: CI

on:
  pull_request:
    branches: [main, dev]

jobs:
  setup:
    uses: ./.github/workflows/detect-workspace-changes.yml
    with:
      from: ${{ github.head_ref }}
      since: ${{ github.base_ref }}

  flatten-deps:
    runs-on: ubuntu-latest
    needs: setup
    outputs:
      dependencies: ${{ toJson(fromJson(steps.flatten.outputs.result).dependencies) }}
    steps:
      - uses: actions/github-script@v6
        id: flatten
        with:
          script: |
            const rawExtensions = `${{ needs.setup.outputs.extensions }}`
            const rawLibraries = `${{ needs.setup.outputs.libraries }}`
            const rawPackages = `${{ needs.setup.outputs.packages }}`
            const extensions = JSON.parse(rawExtensions)
            const libraries = JSON.parse(rawLibraries)
            const packages = JSON.parse(rawPackages)

            console.log(extensions, libraries, packages);

            const deps = [...extensions, ...libraries, ...packages]

            return {
              dependencies: deps
            }

  lint:
    runs-on: ubuntu-latest
    needs: flatten-deps
    strategy:
      fail-fast: false
      matrix:
        workspace: ${{ fromJson(needs.flatten-deps.outputs.dependencies) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - name: Setup yarn
        id: setup-yarn
        run: |
          corepack enable
          corepack prepare yarn@stable --activate
          yarn plugin import workspace-tools
      - run: yarn workspace ${{ matrix.workspace.name }} run lint

  format:
    runs-on: ubuntu-latest
    needs: flatten-deps
    strategy:
      fail-fast: false
      matrix:
        workspace: ${{ fromJson(needs.flatten-deps.outputs.dependencies) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - name: Setup yarn
        id: setup-yarn
        run: |
          corepack enable
          corepack prepare yarn@stable --activate
          yarn plugin import workspace-tools
      - run: yarn workspace ${{ matrix.workspace.name }} run format

  build:
    runs-on: ubuntu-latest
    needs: flatten-deps
    strategy:
      fail-fast: false
      matrix:
        workspace: ${{ fromJson(needs.flatten-deps.outputs.dependencies) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - name: Setup yarn
        id: setup-yarn
        run: |
          corepack enable
          corepack prepare yarn@stable --activate
          yarn plugin import workspace-tools
      - run: yarn workspace ${{ matrix.workspace.name }} run build

  test:
    runs-on: ubuntu-latest
    needs: flatten-deps
    strategy:
      fail-fast: false
      matrix:
        workspace: ${{ fromJson(needs.flatten-deps.outputs.dependencies) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - name: Setup yarn
        id: setup-yarn
        run: |
          corepack enable
          corepack prepare yarn@stable --activate
          yarn plugin import workspace-tools
      - run: yarn workspace ${{ matrix.workspace.name }} run test